name: CI/CD Pipeline to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: cluster
  IMAGE_NAME: flask-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER

      - name: Create Bugsnag Secret
        run: |
          kubectl create secret generic bugsnag-secret \
            --from-literal=api-key=${{ secrets.BUGSNAG_API_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to EKS
        run: kubectl apply -f deployment.yaml

      - name: Install Datadog Agent (Helm)
        run: |
          helm repo add datadog https://helm.datadoghq.com
          helm repo update
          helm upgrade --install datadog-agent datadog/datadog \
            --set datadog.apiKey=${{ secrets.DATADOG_API_KEY }} \
            --set datadog.site='datadoghq.com' \
            --set agents.containerLogs.enabled=true \
            --set datadog.logs.enabled=true \
            --set datadog.apm.enabled=true \
            --set datadog.processAgent.enabled=true \
            --set targetSystem=linux
